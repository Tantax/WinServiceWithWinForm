<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="RedisConfig" type="IAICN.GasFee.Infrastructure.RedisConfigInfo,IAICN.GasFee.Infrastructure" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <container name="defaultContainer">
      <register type="IAICN.GasFee.Infrastructure.IRepositoryContext,IAICN.GasFee.Infrastructure" mapTo="IAICN.GasFee.Repository.DBContext.DefaultEFRepositoryContext,IAICN.GasFee.Repository">
      </register>
    </container>
  </unity>
  <connectionStrings>
    <add name="Default2" connectionString="Data Source=192.168.6.252,62999;Initial Catalog=IAI.Demo;User ID=sa;Password=q123+" providerName="System.Data.SqlClient" />
    <add name="Default" connectionString="Data Source=192.168.6.252,62999;Initial Catalog=J_Fee;User ID=sa;Password=q123+" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <appSettings>
    <add key="CompanyId" value="12"/>
    <!--发送短信时间-->
    <add key="SendTime" value=""/>
    <!--短消息模板-->
    <add key="MsgContent" value="【智云】你好！这里是xx燃气公司，您已欠费{0}元，请在7个工作日内到附近营业厅缴纳所欠费用。"/>
    <!--欠费表查询-->
    <add key="ArrsearNameSendMsgInterval" value="SendMsgInterval"/>
    <add key="ArrsearKeySendMsgInterval" value="Days"/>
    <add key="ArrsearNameSendMsg" value="SendMsg"/>
    <add key="ArrsearKeySendMsg" value="Days"/>
    <!--获取ip接口-->
    <add key="IP" value="http://1212.ip138.com/ic.asp"/>
    <!--消息中心-->
    <add key="Source" value="GASFEE"/>
    <add key="User" value="wangxianping"/>
    <add key="AppSecret" value="3e17362085744278"/>
    <add key="MsgCenterUrl" value="http://msg.scadacc.com/"/>
    <add key="TokenApi" value="api/token?source={0}&amp;user={1}&amp;secret={2}"/>
    <add key="SendMsgApi" value="api/message/send_sms"/>
  </appSettings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <!--log4net配置-->
  <log4net>
    <!--错误日志配置-->
    <appender name="ErrorAppender" type="log4net.Appender.RollingFileAppender">
      <!--文件路径，如果RollingStyle为Composite或Date，则这里设置为目录，文件名在DatePattern里设置，其他则这里要有文件名。已经扩展支持虚拟目录-->
      <param name="File" value="D:\天然气计费系统\Code\IAICN.GasFee.SendSMS.Service\Log\LogError\" />
      <!--True/false，默认为true。当文件存在时，是否在原文件上追加内容。-->
      <param name="AppendToFile" value="true" />
      <!--备份日志数目，默认为0。在CountDirection为负数时有效。-->
      <param name="MaxSizeRollBackups" value="100" />
      <!--当RollingStyle为Composite或Size，这里设置最大文件大小（可以KB，MB，GB为单位，默认为字节）-->
      <param name="MaxFileSize" value="10240" />
      <!--True/false，默认为true。为true时，RollingStyler的date值将无效。且为true时，需要在file里指定文件名，所有日志都会记录在这个文件里。-->
      <param name="StaticLogFileName" value="false" />
      <!--当RollingStyle为Composite或Date，这里设置文件名格式-->
      <param name="DatePattern" value="yyyyMMdd&quot;.txt&quot;" />
      <!--创建新文件的方式，可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite-->
      <param name="RollingStyle" value="Date" />
      <!--默认值为-1。当文件超过MaximumFileSize的大小时，如果要创建新的文件来存储日志，会根据CountDirection的值来重命名文件。大于-1的值时，file里指定的文件名会依次加上.0,.1,.2递增。当等于或小于-1时，创建依赖于MaxSizeRollBackups参数值，创建备份日志数。-->
      <!--<param name="CountDirection" value="-1" />-->
      <!--起始日志级别，取值为下面文章讨论的预定义日志级别。低于此级别的日志不会被记录。-->
      <!--<param name="Threshold" value="Debug" />-->
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%n异常时间：%d [%t] %n异常级别：%-5p %n异 常 类：%c %n内容：%m %n " />
      </layout>
      <!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息
          %n(new line):换行
          %d(datetime):输出当前语句运行的时刻
          %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数
          %t(thread id):当前语句所在的线程ID
          %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等
          %c(class):当前日志对象的名称，例如：
                 模式字符串为：%-10c -%m%n
                 代码为：
          ILog log=LogManager.GetLogger(“Exam.Log”);
          log.Debug(“Hello”);
              则输出为下面的形式：
          Exam.Log       - Hello
          %L：输出语句所在的行号
          %F：输出语句所在的文件名
          %-数字：表示该项的最小长度，如果不够，则用空格填充
          例如，转换模式为%r [%t]%-5p %c - %m%n 的 PatternLayout 将生成类似于以下内容的输出：
          176 [main] INFO  org.foo.Bar - Located nearest gas station.-->
    </appender>
    <!--信息日志配置-->
    <appender name="InfoAppender" type="log4net.Appender.RollingFileAppender">
      <param name="File" value="D:\天然气计费系统\Code\IAICN.GasFee.SendSMS.Service\Log\LogInfo\" />
      <param name="AppendToFile" value="true" />
      <param name="MaxFileSize" value="10240" />a
      <param name="MaxSizeRollBackups" value="100" />
      <param name="StaticLogFileName" value="false" />
      <param name="DatePattern" value="yyyyMMdd&quot;.txt&quot;" />
      <param name="RollingStyle" value="Date" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%n日志时间：%d [%t] %n日志级别：%-5p %n日 志 类：%c %n内容：%m %n" />
      </layout>
    </appender>
    <!--控制台-->
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%5level [%thread] (%file:%line) - %message%newline" />
      </layout>
    </appender>

    <!--log4net.LogManager.GetLogger("logerror")用这个来选择这种类型-->
    <logger name="logerror" additivity="false">
      <level value="ERROR" />
      <appender-ref ref="ErrorAppender" />
    </logger>
    <!--additivity属性false:不继承root-->
    <logger name="loginfo" additivity="false">
      <level value="INFO" />
      <appender-ref ref="InfoAppender" />
    </logger>
    <root>
      <level value="INFO" />
      <appender-ref ref="InfoAppender" />
      <appender-ref ref="ConsoleAppender" />
    </root>
  </log4net>
</configuration>